/*===========================================
   ■■■ 실행 흐름의 컨트롤 (제어문) ■■■
============================================*/

// 반복문(for 문) 실습
// 다중 for문 (반복문의 중첩)을 활용한 구구단 출력 실습
/*
방법 1: 2중첩 반복문  2번사용
방법 2: 3중첩 반복문  1번사용

	-2 ~ 9단까지
실행 예)

2 x 1 = 2   3 x 1 = 3   ....
2 x 2 = 4   3 x 2 = 6
2 x 3 = 6   3 x 3 = 9
	:		   :

6 x 1 = 6   7 * 1 = 7   ....
6 x 2 = 12  7 * 2 = 14
6 x 3 = 18  7 * 3 = 21
	:
*/
public class Test062_구구단2
{
	public static void main(String[] args)
	{

// 방법 1) 2중첩 반복문 -> 2번 사용
/*
		int i, j;
		
		// 2 ~ 5단
		for (i = 1; i <= 9; i++)
		{
			for (j = 2; j <= 5; j++)
			{
				System.out.printf("%d x %d = %2d | ", j, i, (j * i));
			}
			System.out.println();
		}

		System.out.println("--------------------------------------------------");
		// 6 ~ 9단
		for (i = 1; i <= 9; i++)
		{
			for (j = 6; j <= 9; j++)
			{
				System.out.printf("%d x %d = %2d | ", j, i, (j * i));
			}
			System.out.println();
		}
*/
// 방법 2) 3중첩 반복문 -> 1번 사용
/* < 내 생각>
1번for {2바퀴 => 1) 2~5단의 x1~x9	2) 6~9단의 x1~x9}
   2번for {9바퀴 => x1 ~ x9 한 줄씩 출력}
   	  3번for { 4바퀴 => (i=1) 2~5단 / (i=2) 6~9단
*/
		
		//나
		int i, j, k;
/*
		for (i = 1; i <= 2; i++)
		{
			for (j = 1; j <= 9; j++)
			{
				for (k = 2; k <= 5; k++)
				{		
					if (i == 1)
						System.out.printf("%d x %d = %2d | ", k, j, (k * j));
					if (i == 2)
						System.out.printf("%d x %d = %2d | ", (k+4), j, ((k+4) * j));
				}
				System.out.println();
			}
			System.out.println("---------------------------------------------------");
		}
*/
/*
		//쌤 (1) (i 초기값 0으로 하고, 3중첩문에 조건문 없이 간단하게 함)
		for (i = 0; i <= 1; i++)
		{
			for (j = 1; j <= 9; j++)
			{
				for (k = 2; k <= 5; k++)
				{		
						System.out.printf("%d x %d = %2d | ", i*4+k, j, ((i*4+k) * j));
				}
				System.out.println();
			}
			System.out.println("---------------------------------------------------");
		}
*/
		//쌤 (2) 
		for (i = 2; i <= 6; i+=4)
		{
			for (j = 1; j <= 9; j++)
			{
				for (k = i; k <= (i + 3); k++)
				{		
						System.out.printf("%d x %d = %2d | ", k, j, (k * j));
				}
				System.out.println();
			}
			System.out.println("---------------------------------------------------");
		}
	}
}

// 실행 결과
/*
2 x 1 =  2 | 3 x 1 =  3 | 4 x 1 =  4 | 5 x 1 =  5 |
2 x 2 =  4 | 3 x 2 =  6 | 4 x 2 =  8 | 5 x 2 = 10 |
2 x 3 =  6 | 3 x 3 =  9 | 4 x 3 = 12 | 5 x 3 = 15 |
2 x 4 =  8 | 3 x 4 = 12 | 4 x 4 = 16 | 5 x 4 = 20 |
2 x 5 = 10 | 3 x 5 = 15 | 4 x 5 = 20 | 5 x 5 = 25 |
2 x 6 = 12 | 3 x 6 = 18 | 4 x 6 = 24 | 5 x 6 = 30 |
2 x 7 = 14 | 3 x 7 = 21 | 4 x 7 = 28 | 5 x 7 = 35 |
2 x 8 = 16 | 3 x 8 = 24 | 4 x 8 = 32 | 5 x 8 = 40 |
2 x 9 = 18 | 3 x 9 = 27 | 4 x 9 = 36 | 5 x 9 = 45 |
---------------------------------------------------
6 x 1 =  6 | 7 x 1 =  7 | 8 x 1 =  8 | 9 x 1 =  9 |
6 x 2 = 12 | 7 x 2 = 14 | 8 x 2 = 16 | 9 x 2 = 18 |
6 x 3 = 18 | 7 x 3 = 21 | 8 x 3 = 24 | 9 x 3 = 27 |
6 x 4 = 24 | 7 x 4 = 28 | 8 x 4 = 32 | 9 x 4 = 36 |
6 x 5 = 30 | 7 x 5 = 35 | 8 x 5 = 40 | 9 x 5 = 45 |
6 x 6 = 36 | 7 x 6 = 42 | 8 x 6 = 48 | 9 x 6 = 54 |
6 x 7 = 42 | 7 x 7 = 49 | 8 x 7 = 56 | 9 x 7 = 63 |
6 x 8 = 48 | 7 x 8 = 56 | 8 x 8 = 64 | 9 x 8 = 72 |
6 x 9 = 54 | 7 x 9 = 63 | 8 x 9 = 72 | 9 x 9 = 81 |
---------------------------------------------------
계속하려면 아무 키나 누르십시오 . . .
*/