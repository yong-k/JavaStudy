/*====================================
   ■■■ 자바의 개요 및 특징 ■■■
======================================*/

// 변수와 자료형
// 형 변환
// 접미사 활용

public class Test008
{
	public static void main(String[] args)
	{
		int a;
		a = 10;
		System.out.println("a의 결과 : " + a);

		int b = 20;
		System.out.println("b의 결과 : " + b);
		
		/*
		short c;
		c = a;
		System.out.println("c의 결과 : " + c);
		// => 컴파일 에러 발생
		*/

		short c; 
		// 는 문제 없음

		//연산 및 처리 (대입 연산)
		//c = a;
		// => 컴파일 에러 발생
		// 기본적으로는 자료형이 작은 것에 큰 것을 담지 못한다.
		// => (자동 형 변환 규칙 위반)

		// 그래서 c = a 쓰려면
		//	- 먼저 int a에 short c에 담길만한 데이터 담겨 있는지 확인
		// 명시적인 형 변환(강제 형 변환) 사용
		c = (short) a;
		// a가 가지고 있는 데이터를 short 형으로 형 변환을 수행한 후, 변수 c에 대입한다.
		
		// 00000000 00000000 00000000 00001010	-> int 형 a 변수 10
		//			int -> short 로 형 변환
		// 00000000 00001010					-> short 형으로 변환된 결과

		// 결과 출력
		System.out.println("c의 결과 : " + c);

		// 변수 선언 및 초기화
		// long d = 10000000000;	// 백 억
		// '=' 대입 연산자를 기준으로 우측의 상수 표현이 먼저인데,
		// int 형 메모리에 해당 상수를 할당할 수 없기 때문에!
		// ==> 접미사 L 또는 l 을 붙여줘야 함
		long d = 10000000000L;
		// long 형은 숫자(상수) 뒤에 L 또는 l 을 붙여 상수를 표현해야 한다.
		// 즉, 약 21억 이상 되는 상수에는 데이터 뒤에 접미사를 꼭 붙여야 한다.

		// 결과 출력
		System.out.println("d의 결과 : " + d);

		long d2 = 10;
		System.out.println("d2의 결과 : " + d2);
		// Q) 여기에는 왜 L을 안 붙여도 될까?
		// A) = 등장하면 왼쪽을 먼저 봄
		//	  일단 상수보면 기본정수형이 int이니까 4byte 잡고 데이터 저장하려고함
		//	  10은 그냥 4byte안에 데이터 저장 가능
		//	  그리고 그걸 long type 변수 d2에 담으면 됨
		//	그런데 백 억은 4byte안에 담기지 않으므로, 8바이트 잡고 저장먼저 해달라고 접미사 붙임

		// long d2 = 10; 하면 
		// 1)  = 기준으로 왼쪽 정수(기본 4바이트) 먼저 메모리에 저장 => 10 메모리에 저장
		// 2) long type 변수 d2인 8byte 메모리 잡고 10 넣음
				 
		// long d2 = 10L; 하면
		//	= 기준으로 왼쪽 정수 먼저 메모리에 저장
		//	접미사 L 붙어있으니 8byte 메모리 잡고 10 메모리에 저장

		int e = 030;
		System.out.println("e의 결과 : " + e);
		// 24 출력됨
		// Why? => 접두어로 0 을 붙이면 8진수로 처리됨 
		// 030(8) => 64*2 + 8*3 + 1*0 = 24

		// 변수 선언 및 초기화
		int f = 0xa6;
		// => 접두어 [0x] => 16진수

		// 결과 출력
		System.out.println("f의 결과 : " + f);

		// 변수 선언 및 초기화
		float g = 0;
		// => 정수 0 은 int로 잡혀서 float으로 자동 형 변환 됨
		//float g2 = 0.0;
		//=> 에러남
		//	=> 실수 0.0 은 double로 잡혀서 float으로 자동 형 변환 XX
		float g2 = 0.0f;
		// float으로 표현할 모든 실수는 접미사 f 또는 F 붙여야 함
		// 실수는 기본적으로 double로 잡히기 때문에..!!

		System.out.println("g의 결과 : " + g);
		System.out.println("g2의 결과 : " + g2);
		
		
	}
}

// 실행 결과
/*
a의 결과 : 10
b의 결과 : 20
c의 결과 : 10
d의 결과 : 10000000000
d2의 결과 : 10
e의 결과 : 24
f의 결과 : 166
g의 결과 : 0.0
g2의 결과 : 0.0
계속하려면 아무 키나 누르십시오 . . .
*/