/*===========================================
   ■■■ 실행 흐름의 컨트롤 (제어문) ■■■
============================================*/

// 반복문 실습
/*
- 반복문의 개요
	주어진 조건이 참인 경우, 일정한 영역의 문장을 반복 수행하다가
	조건식이 거짓이 되는 순간이 오면, 반복 수행을 중단하는 문장이다.
	이러한 반복문에는 while, do~while, for 문 등이 있으며
	반복문의 제어를 위해 break, continue 문을 사용하는 경우가 있다.

- while 문
	조건식을 먼저 비교하여
	조건식의 처리 결과가 참인 경우, 특정 영역을 반복 수행하는 문장으로
	반복 횟수가 정해져 있지 않은 경우나
	반복 횟수가 많은 경우 주로 사용한다.
	while 문은 조건이 맞지 않는 경우, 
	반복은 커녕 단 한 번도 실행되지 않을 수 있다.

- while 문의 형식 및 구조

	while (조건식) 
	{
		실행문;
	}
*/
public class Test046
{
	public static void main(String[] args)
	{
/*
		int n = 0;
		
		while (n <= 10)
		{	
			System.out.println("n = " + n);
			n++;
		}
*/
/*	
		int n = 0;
		
		// 출력구문과 증감식의 위치만 바꿈
		while (n <= 10)
		{	
			n++;
			System.out.println("n = " + n);
		}
*/
/*
		// 컴파일 전에 예측해보고 컴파일 결과 확인해보기
		int n = 0;
	
		while (n++ <= 10)
		{	
			System.out.println("n = " + ++n);
		}
*/

		// 1부터 100까지의 합을 계산하여
		// 결과를 출력하는 프로그램을 구현한다.
		// 단, while 반복문을 사용한다.

		// 실행 예)
		// 1부터 100까지의 합 : 5050
		// 계속하려면 아무 키나...

		int n = 0, sum = 0;

		while (n <= 100) 
		{	
			sum += n;
			n++;
		}

		System.out.println("1부터 100까지의 합 : " + sum);
	}
}

// 실행 결과
/*
1부터 100까지의 합 : 5050
계속하려면 아무 키나 누르십시오 . . .
*/